{"version":3,"file":"ngxs-labs-immer-adapter.mjs","sources":["../../lib/core/immer-adapter/common/immutable-state-context.ts","../../lib/core/immer-adapter/obsolete/mutation.decorator.ts","../../lib/core/immer-adapter/obsolete/index.ts","../../lib/core/immer-adapter/decorators/immutable-context.decorator.ts","../../lib/core/immer-adapter/decorators/immutable-selector.decorator.ts","../../ngxs-labs-immer-adapter.ts"],"sourcesContent":["import { StateContext, StateOperator } from '@ngxs/store';\r\nimport { ExistingState } from '@ngxs/store/operators';\r\nimport { createDraft, finishDraft, Objectish } from 'immer';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class ImmutableStateContext<T extends any> implements StateContext<T> {\r\n  private frozenState: T | null = null;\r\n\r\n  constructor(private ctx: StateContext<T>) {\r\n    ImmutableStateContext.autobindStateContext(this);\r\n  }\r\n\r\n  private static autobindStateContext(context: any): void {\r\n    for (const prop of Object.getOwnPropertyNames(Object.getPrototypeOf(context))) {\r\n      if (prop === 'constructor' || typeof context[prop] !== 'function') {\r\n        continue;\r\n      }\r\n\r\n      context[prop] = context[prop].bind(context);\r\n    }\r\n  }\r\n\r\n  public getState(): T {\r\n    this.frozenState = createDraft(this.ctx.getState() as Objectish) as T;\r\n    return this.frozenState;\r\n  }\r\n\r\n  public setState(val: T | StateOperator<T>): void {\r\n    let state: any;\r\n\r\n    if (typeof val === 'function') {\r\n      let newState;\r\n      const oldState: ExistingState<T> = createDraft(this.ctx.getState() as Objectish) as ExistingState<T>;\r\n      const operator: StateOperator<T> = val as StateOperator<T>;\r\n      const mutatedOldState: T = operator(oldState);\r\n\r\n      if (this.frozenState === mutatedOldState) {\r\n        newState = finishDraft(this.frozenState);\r\n        finishDraft(oldState);\r\n      } else {\r\n        const mutateOutsideOperator: boolean = oldState !== mutatedOldState;\r\n        if (mutateOutsideOperator) {\r\n          newState = mutatedOldState;\r\n          finishDraft(oldState);\r\n        } else {\r\n          newState = finishDraft(mutatedOldState);\r\n        }\r\n      }\r\n\r\n      state = newState;\r\n    } else {\r\n      state = finishDraft(val);\r\n    }\r\n\r\n    this.frozenState = null;\r\n    return this.ctx.setState(state);\r\n  }\r\n\r\n  public patchState(val: Partial<T>): void {\r\n    return this.ctx.patchState(finishDraft(val) as Partial<T>);\r\n  }\r\n\r\n  public dispatch(actions: any | any[]): Observable<void> {\r\n    return this.ctx.dispatch(actions);\r\n  }\r\n}\r\n","import { StateContext } from '@ngxs/store';\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\n/**\n * @deprecated - use ImmutableContext instead Mutation\n */\nexport function Mutation(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","// export { produce } from './produce';\r\nexport { Mutation } from './mutation.decorator';\r\n","import { StateContext } from '@ngxs/store';\n\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\nexport function ImmutableContext(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","import { createDraft } from 'immer';\n\nexport function ImmutableSelector(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(state: any, ...args: any[]) {\n      return method.apply(this, [createDraft(state), ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}